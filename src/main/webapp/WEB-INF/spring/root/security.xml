<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:security="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

   <!-- 보안을 체크할 필요가 없는 경로 설정 -->
   <security:http pattern="/resources/**" security="none"/>
   
   <!-- 보안 필터 체인(프로세싱) 설정 -->
   <security:http>
      <!-- 요청 경로 체크 -->
      <!-- <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/> -->
      <security:intercept-url pattern="/user/**" access="hasRole('ROLE_USER')"/>
      <security:intercept-url pattern="/**" access="permitAll"/>
      
      <!-- 로그인/로그아웃 설정 -->
      <security:form-login login-page="/auth/login"
                      username-parameter="userId"
                      password-parameter="userPassword"
                      login-processing-url="/login"
                      authentication-failure-url="/auth/login"
                      />
   	
<!--  <security:csrf disabled="true"/> -->
      
      <!-- POST 방식으로 요청해야함 -->
      <security:logout logout-url="/logout"/>
      
      <!-- 403에러가 발생할 때 이동할 페이지  -->
     <!--  <security:access-denied-handler error-page="/user/error403"/> -->
   </security:http>
   
   <!-- 사용자 인증 처리를 위한 설정 (DB 테이블 관련) -->
   <security:authentication-manager>
      <security:authentication-provider ref="daoAuthenticationProvider"/>
   </security:authentication-manager>
   
   <bean id="daoAuthenticationProvider"
        class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
      <property name="passwordEncoder" ref="bCryptPasswordEncoder"/>
      <property name="userDetailsService" ref="jdbcUserService"/>
      <property name="authoritiesMapper" ref="roleHierarchyAuthoritiesMapper"/>
   </bean>
   
   <bean id="bCryptPasswordEncoder"
        class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
   
   <security:jdbc-user-service id="jdbcUserService"
                        data-source-ref="dataSource"
                        users-by-username-query="select user_id, user_password, user_enable from users where user_id=?"
                        authorities-by-username-query="select user_id, user_authority from users where user_id=?"/>
   
   <bean id="roleHierarchyAuthoritiesMapper"
        class="org.springframework.security.access.hierarchicalroles.RoleHierarchyAuthoritiesMapper">
      <constructor-arg>
         <bean class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
            <property name="hierarchy">
               <value>
                  ROLE_ADMIN > ROLE_USER
               </value>
            </property>
         </bean>
      </constructor-arg>
   </bean>
   
</beans>